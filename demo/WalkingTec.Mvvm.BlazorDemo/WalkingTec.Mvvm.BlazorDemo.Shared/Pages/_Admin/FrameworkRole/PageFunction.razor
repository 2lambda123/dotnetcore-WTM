@page "/_Admin/FrameworkRole/PageFunction/{id}"
@using WalkingTec.Mvvm.Mvc.Admin.ViewModels.FrameworkRoleVMs
@inherits BasePage

@*<ValidateForm @ref="vform" Model="@Roles" OnValidSubmit="@Submit">
    <Row ItemsPerRow="ItemsPerRow.Two" RowType="RowType.Inline">
        <Display @bind-Value="@Roles.Entity.RoleCode" ShowLabel="true" />
        <Display @bind-Value="@Roles.Entity.RoleName" ShowLabel="true" />
    </Row>
</ValidateForm>*@

@if (Roles?.Pages != null)
{
    <Table Items="Roles.Pages" TItem="Page_View" IsPagination="false" IsStriped="true" IsBordered="true" ShowRefresh="false"
           ShowDefaultButtons="false" style="margin-top:10px;">
        <TableColumns>
            <TableColumn @bind-Field="@context.Name" Width="200" />
            <TableColumn @bind-Field="@context.Actions" Width="800" AllowTextWrap="true">
                <Template Context="actions">
                    @{
                        var row = (Page_View)actions.Row;
                        var allactions = row.AllActions.ToBBItems();
                    }
                    <CheckboxList @key="@(row.ID+row.Name)" style="margin-left:10px;" @bind-Value="row.Actions" Items="allactions" ShowLabel="false" ShowBorder="false" />
                </Template>
            </TableColumn>
        </TableColumns>
    </Table>
}
@*<div class="modal-footer table-modal-footer">
    <Button Color="Color.Primary" Icon="fa fa-save" Text="@WtmBlazor.Localizer["Sys.Close"]" OnClick="OnClose" />
    <Button Color="Color.Primary" ButtonType="ButtonType.Submit" Icon="fa fa-save" Text="@WtmBlazor.Localizer["Sys.Edit"]" IsAsync="true" />
</div>*@
<style>
    .table-cell {
        display: inline;
    }
</style>
@code {
    private FrameworkRoleMDVM2 Roles = new FrameworkRoleMDVM2();
    private ValidateForm vform { get; set; }
    [Parameter]
    public string id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var rv = await WtmBlazor.Api.CallAPI<FrameworkRoleMDVM2>($"/api/_FrameworkRole/GetPageActions/{id}");
        Roles = rv.Data;
    }


    private async Task Submit(EditContext context)
    {
        await PostsForm(vform, $"/api/_FrameworkRole/EditPrivilege", (s) => "Sys.OprationSuccess", method: HttpMethodEnum.PUT);
    }

    public void OnClose()
    {
        CloseDialog();
    }

}
